name: Terraform plan

on:
  workflow_call:
    inputs:
      terraform-version:
        description: Terraform version
        type: string
        default: "1.1.9"
        required: false
    secrets:
      GITHUB_TOKEN:
        description: GitHub PAT
        required: true
      TF_API_TOKEN:
        description: Terraform API token
        required: true

jobs:
  terraform:
    name: Terraform plan
    env:
      TF_VAR_name: common
      TF_VAR_environment: proto
      TF_VAR_region: us-west-2
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./terraform

    steps:
      - name: Checkout Repository
        id: checkout
        uses: actions/checkout@v2

      - name: Setup Terraform
        id: setup
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ inputs.terraform-version }}
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Init
        id: init
        run: |
          terraform init

      - name: Terraform Validate
        id: validate
        run: |
          terraform validate -no-color

      - name: Terraform Plan
        id: plan
        run: |
          terraform plan -no-color -input=false -var-file terraform.tfvars

      - uses: jwalton/gh-find-current-pr@v1
        id: pull-request

      - name: Update Pull Request
        id: comment
        if: steps.pull-request.outputs.number != ""
        uses: actions/github-script@v6
        env:
          PLAN: "${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = [
              "#### Terraform Initialization ‚öôÔ∏è`${{ steps.init.outcome }}`",
              "#### Terraform Validation ü§ñ`${{ steps.validate.outcome }}`",
              "#### Terraform Plan üìñ`${{ steps.plan.outcome }}`",
              "<details><summary>Show Plan</summary>",
              "```terraform",
              `${process.env.PLAN}`,
              "```",
              "</details>",
              "*Pusher: @${{ github.actor }}, Action: `${{ github.event_name }}`"
            ].join("\n");

            github.rest.issues.createComment({
              issue_number: ${{ steps.pull-request.outputs.number }},
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
